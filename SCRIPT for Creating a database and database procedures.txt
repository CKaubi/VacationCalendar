CREATE DATABASE TimeSheetSystem;
GO


USE TimeSheetSystem;
GO

CREATE TABLE VacationHistory(
user_id INT NOT NULL,
date_from INT NOT NULL,
date_to INT NOT NULL,
CONSTRAINT PK_VacationHistory PRIMARY KEY (user_id,date_from,date_to)
);

GO

CREATE TABLE [User](
id INT NOT NULL PRIMARY KEY,
name varchar(max) NOT NULL
);
GO

CREATE TABLE Vacation(
month_id INT NOT NULL,
user_id INT NOT NULL,
days SMALLINT NOT NULL,
PRIMARY KEY (month_id, user_id)
);
GO

CREATE PROCEDURE ImportFromXML
	@xmlParameter xml
AS
BEGIN
	SET NOCOUNT ON;

    insert into Vacation(month_id, user_id, days)
	SELECT    
		
		total.value('(month/text())[1]', 'int') as month_id,
		total.value('(userId/text())[1]', 'int') as user_id,
		total.value('(days/text())[1]', 'smallint') as days
	FROM @xmlParameter.nodes('/totals/total') as TEMPTABLE(total) 
END
GO

CREATE PROCEDURE ImportVacationScalar 
	@month_id INT,
	@user_id INT,
	@days SMALLINT
AS
BEGIN
	SET NOCOUNT ON;	

	INSERT INTO Vacation(month_id, user_id, days) VALUES(@month_id, @user_id, @days)
END
GO

CREATE PROCEDURE GetVacationsForLastMonth
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Current_year INT;
	DECLARE @Last_month INT;

	SET @Current_year = YEAR(GETDATE());
	SET @Last_month = MONTH(GETDATE()) - 1;
	
	SELECT user_id as Id, name as Name, CONVERT(date, CAST(date_from as nvarchar), 112) as VacationFrom, CONVERT(date, CAST(date_to as nvarchar), 112) as VacationTo 
	FROM [User] 
	JOIN VacationHistory 
	ON([User].id = VacationHistory.user_id)
	WHERE YEAR(CONVERT(date, CAST(date_from as nvarchar), 112)) =  @Current_year AND MONTH(CONVERT(date, CAST(date_from as nvarchar), 112)) = @Last_month
	ORDER BY [User].[name] ASC, Date_From ASC
END
GO

CREATE PROCEDURE  GetUserVacationHistory
	@id int = null
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @Current_year INT;
	SET @Current_year = YEAR(GETDATE());
	
	IF(@id is not null)
	BEGIN

		SELECT user_id as Id, name as Name, CONVERT(date, CAST(date_from as nvarchar), 112) as VacationFrom, CONVERT(date, CAST(date_to as nvarchar), 112) as VacationTo 
		FROM [User] 
		JOIN VacationHistory 
		ON([User].id = VacationHistory.user_id)
		WHERE user_id = @id 
		AND (YEAR(CONVERT(date, CAST(date_from as nvarchar), 112)) BETWEEN (@Current_year-1) AND  @Current_year)
		ORDER BY date_from  DESC;
	END
	ELSE
	BEGIN 
		SELECT user_id as Id, name as Name, CONVERT(date, CAST(date_from as nvarchar), 112) as VacationFrom, CONVERT(date, CAST(date_to as nvarchar), 112) as VacationTo 
		FROM [User] 
		JOIN VacationHistory 
		ON([User].id = VacationHistory.user_id)
		WHERE YEAR(CONVERT(date, CAST(date_from as nvarchar), 112)) =  @Current_year
		ORDER BY [User].[name] ASC, Date_From ASC
	END
END
GO

CREATE PROCEDURE  AddVacation
	@id INT,
	@date_from DATE,
	@date_to DATE
AS
BEGIN
DECLARE @date_from_int_format INT;
	SET  @date_from_int_format = CONVERT(INT, CONVERT(NVARCHAR,@date_from, 112));

	DECLARE @date_to_int_format INT;
	SET  @date_to_int_format = CONVERT(INT, CONVERT(NVARCHAR, @date_to, 112));

	SET NOCOUNT ON;
	DECLARE @CrossingCounter INT;

	 SELECT  @CrossingCounter = count(*) 
			FROM [TimeSheetSystem].[dbo].VacationHistory as a
			WHERE (( a.date_to = @date_from_int_format OR a.date_from = @date_to_int_format ) 
			OR ( a.date_from < @date_to_int_format AND a.date_to > @date_from_int_format )) 
			AND a.user_id = @id;

	IF ( @date_to >= @date_from )
	AND ( YEAR(@date_from) = YEAR(@date_to))
	AND ( MONTH(@date_from) = MONTH(@date_to))
	AND ( @CrossingCounter = 0 )
			BEGIN  

				INSERT INTO VacationHistory(user_id, date_from, date_to) 
				VALUES(@id,  @date_from_int_format, @date_to_int_format);

				SELECT @@ROWCOUNT;

			END 
			ELSE RAISERROR('Incorrect dates', 16, 1)


END

GO
